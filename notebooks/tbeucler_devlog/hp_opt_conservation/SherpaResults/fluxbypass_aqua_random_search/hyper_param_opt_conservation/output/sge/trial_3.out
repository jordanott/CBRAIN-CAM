Running from arcus-8
2019-05-13 13:32:17.074803: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-05-13 13:32:18.055960: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1405] Found device 0 with properties: 
name: TITAN X (Pascal) major: 6 minor: 1 memoryClockRate(GHz): 1.531
pciBusID: 0000:82:00.0
totalMemory: 11.91GiB freeMemory: 11.75GiB
2019-05-13 13:32:18.056025: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1484] Adding visible gpu devices: 0
2019-05-13 13:32:27.767467: I tensorflow/core/common_runtime/gpu/gpu_device.cc:965] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-05-13 13:32:27.767751: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971]      0 
2019-05-13 13:32:27.767769: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 0:   N 
2019-05-13 13:32:27.768200: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 11374 MB memory) -> physical GPU (device: 0, name: TITAN X (Pascal), pci bus id: 0000:82:00.0, compute capability: 6.1)
{'alpha': 0.6357427627234321, 'dropout': 0.26951213779938843, 'lr': 0.004989393132357677, 'leaky_relu': 0.10927761849387257, 'batch_norm': 0, 'loss_type': 'weak_loss', 'num_layers': 4, 'layer_0': 315, 'layer_1': 246, 'layer_2': 263, 'layer_3': 53, 'layer_4': 441, 'layer_5': 498, 'layer_6': 37, 'layer_7': 294, 'max_concurrent': 4, 'P': 'arcus_gpu.p', 'q': 'arcus.q', 'l': "hostname='(arcus-1|arcus-2|arcus-3|arcus-4|arcus-5|arcus-6|arcus-7|arcus-8|arcus-9|arcus-10)'", 'env': '/home/jott1/Projects/SHERPA_EX/.profile', 'data': 'fluxbypass_aqua', 'run_type': 'hyper_param_opt_conservation', 'batch_size': 2048, 'data_dir': '/baldig/chemistry/earth_system_science/', 'max_dense_layers': 8, 'epochs': 25, 'patience': 10, 'conservation': 1}
Epoch 1/25
 - 3746s - loss: -9.1334e+24 - mean_squared_error: 5919342262723425633042432.0000 - val_loss: -1.0857e+25 - val_mean_squared_error: 7036236360477406069260288.0000
Epoch 2/25
 - 3548s - loss: -1.1347e+25 - mean_squared_error: 7354120816050672295215104.0000 - val_loss: -1.1572e+25 - val_mean_squared_error: 7499665127223572742275072.0000
Epoch 3/25
 - 3825s - loss: -1.2056e+25 - mean_squared_error: 7813780912461514889232384.0000 - val_loss: -1.2239e+25 - val_mean_squared_error: 7931906650901723840774144.0000
Epoch 4/25
 - 3746s - loss: -1.2712e+25 - mean_squared_error: 8238367278711364013522944.0000 - val_loss: -1.2877e+25 - val_mean_squared_error: 8345448154249039987081216.0000
Epoch 5/25
 - 3936s - loss: -1.3348e+25 - mean_squared_error: 8650862226535243585683456.0000 - val_loss: -1.3502e+25 - val_mean_squared_error: 8750866471465918417338368.0000
Epoch 6/25
 - 3999s - loss: -1.3992e+25 - mean_squared_error: 9068527688530706697289728.0000 - val_loss: -1.4140e+25 - val_mean_squared_error: 9164437569112314428260352.0000
Epoch 7/25
 - 4423s - loss: -1.4637e+25 - mean_squared_error: 9486165543495285138784256.0000 - val_loss: -1.4740e+25 - val_mean_squared_error: 9552958097256803452583936.0000
Epoch 8/25
 - 4177s - loss: -1.5166e+25 - mean_squared_error: 9828941066118487473127424.0000 - val_loss: -1.5178e+25 - val_mean_squared_error: 9837029939737847924785152.0000
Epoch 9/25
 - 4073s - loss: -1.5571e+25 - mean_squared_error: 10091792392569376932364288.0000 - val_loss: -1.5551e+25 - val_mean_squared_error: 10078485768434139275460608.0000
Epoch 10/25
 - 3998s - loss: -1.5943e+25 - mean_squared_error: 10332580450807641135906816.0000 - val_loss: -1.5917e+25 - val_mean_squared_error: 10315814314554078357618688.0000
Epoch 11/25
 - 5141s - loss: -1.6330e+25 - mean_squared_error: 10583183275924683069849600.0000 - val_loss: -1.6302e+25 - val_mean_squared_error: 10565606399841076177272832.0000
/pkg/python/3.6.1-centos7/lib/python3.6/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
Traceback (most recent call last):
  File "main.py", line 76, in <module>
    net.train(train_gen, valid_gen, trial=trial, client=client)
  File "/home/jott1/Projects/CBRAIN-CAM/notebooks/tbeucler_devlog/hp_opt_conservation/model.py", line 140, in train
    json_file.write(history.history)
TypeError: write() argument must be str, not dict
