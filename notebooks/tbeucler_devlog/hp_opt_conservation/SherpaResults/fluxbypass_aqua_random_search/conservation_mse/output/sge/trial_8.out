Running from arcus-10
2019-05-15 18:59:55.059467: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-05-15 18:59:57.991879: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1405] Found device 0 with properties: 
name: TITAN V major: 7 minor: 0 memoryClockRate(GHz): 1.455
pciBusID: 0000:83:00.0
totalMemory: 11.75GiB freeMemory: 11.34GiB
2019-05-15 18:59:57.991930: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1484] Adding visible gpu devices: 0
2019-05-15 18:59:58.432928: I tensorflow/core/common_runtime/gpu/gpu_device.cc:965] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-05-15 18:59:58.432982: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971]      0 
2019-05-15 18:59:58.432989: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 0:   N 
2019-05-15 18:59:58.433294: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10955 MB memory) -> physical GPU (device: 0, name: TITAN V, pci bus id: 0000:83:00.0, compute capability: 7.0)
{'alpha': 0.8773327270577692, 'dropout': 0.4940835003282253, 'lr': 0.0017384316365341246, 'leaky_relu': 0.3573031239973362, 'batch_norm': 0, 'num_layers': 5, 'layer_0': 188, 'layer_1': 498, 'layer_2': 327, 'layer_3': 435, 'layer_4': 156, 'layer_5': 240, 'layer_6': 459, 'layer_7': 159, 'max_concurrent': 3, 'P': 'arcus_gpu.p', 'q': 'arcus.q', 'l': "hostname='(arcus-1|arcus-2|arcus-3|arcus-4|arcus-5|arcus-6|arcus-7|arcus-8|arcus-9|arcus-10)'", 'env': '/home/jott1/Projects/SHERPA_EX/.profile', 'data': 'fluxbypass_aqua', 'net_type': 'conservation', 'loss_type': 'mse', 'batch_size': 2048, 'data_dir': '/baldig/chemistry/earth_system_science/', 'max_dense_layers': 8, 'epochs': 25, 'patience': 10}
Epoch 1/25
 - 2303s - loss: 469.4773 - mean_squared_error: 469.4773 - val_loss: 296.7226 - val_mean_squared_error: 296.7226
Epoch 2/25
 - 551s - loss: 397.8051 - mean_squared_error: 397.8051 - val_loss: 395.1989 - val_mean_squared_error: 395.1989
Epoch 3/25
 - 522s - loss: 388.1978 - mean_squared_error: 388.1978 - val_loss: 288.5222 - val_mean_squared_error: 288.5222
Epoch 4/25
 - 541s - loss: 382.9356 - mean_squared_error: 382.9356 - val_loss: 341.7471 - val_mean_squared_error: 341.7471
Epoch 5/25
 - 525s - loss: 379.0949 - mean_squared_error: 379.0949 - val_loss: 403.2445 - val_mean_squared_error: 403.2445
Epoch 6/25
 - 520s - loss: 376.8753 - mean_squared_error: 376.8753 - val_loss: 273.0098 - val_mean_squared_error: 273.0098
Epoch 7/25
 - 526s - loss: 374.2559 - mean_squared_error: 374.2559 - val_loss: 352.9463 - val_mean_squared_error: 352.9463
Epoch 8/25
 - 512s - loss: 373.1795 - mean_squared_error: 373.1795 - val_loss: 454.0753 - val_mean_squared_error: 454.0753
Epoch 9/25
 - 514s - loss: 372.0330 - mean_squared_error: 372.0330 - val_loss: 376.4919 - val_mean_squared_error: 376.4919
Epoch 10/25
 - 508s - loss: 370.3920 - mean_squared_error: 370.3920 - val_loss: 319.4266 - val_mean_squared_error: 319.4266
Epoch 11/25
 - 513s - loss: 369.8181 - mean_squared_error: 369.8181 - val_loss: 299.2610 - val_mean_squared_error: 299.2610
Epoch 12/25
 - 530s - loss: 368.9696 - mean_squared_error: 368.9696 - val_loss: 288.6530 - val_mean_squared_error: 288.6530
Epoch 13/25
 - 528s - loss: 368.2245 - mean_squared_error: 368.2245 - val_loss: 387.2312 - val_mean_squared_error: 387.2312
Epoch 14/25
 - 2751s - loss: 368.6391 - mean_squared_error: 368.6391 - val_loss: 344.7754 - val_mean_squared_error: 344.7754
Epoch 15/25
 - 517s - loss: 367.5352 - mean_squared_error: 367.5352 - val_loss: 443.1549 - val_mean_squared_error: 443.1549
Epoch 16/25
 - 525s - loss: 367.2178 - mean_squared_error: 367.2178 - val_loss: 354.7423 - val_mean_squared_error: 354.7423
/pkg/python/3.6.1-centos7/lib/python3.6/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
Done with trial 8
