2019-05-23 13:33:40.154367: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1405] Found device 0 with properties: 
name: Tesla K40c major: 3 minor: 5 memoryClockRate(GHz): 0.745
pciBusID: 0000:84:00.0
totalMemory: 11.17GiB freeMemory: 10.83GiB
2019-05-23 13:33:40.154419: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1484] Adding visible gpu devices: 0
2019-05-23 13:33:44.753735: I tensorflow/core/common_runtime/gpu/gpu_device.cc:965] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-05-23 13:33:44.753764: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971]      0 
2019-05-23 13:33:44.753774: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 0:   N 
2019-05-23 13:33:44.754060: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10311 MB memory) -> physical GPU (device: 0, name: Tesla K40c, pci bus id: 0000:84:00.0, compute capability: 3.5)
{   'P': 'arcus_gpu.p',
    'alg': 'random',
    'alpha': 0.010128262977384804,
    'batch_norm': 0,
    'batch_size': 2048,
    'data': 'fluxbypass_aqua',
    'data_dir': '/baldig/chemistry/earth_system_science/',
    'dropout': 0,
    'env': '/home/jott1/Projects/SHERPA_EX/.profile',
    'epochs': 25,
    'gpus': '2',
    'l': "hostname='(arcus-1|arcus-2|arcus-3|arcus-4|arcus-5|arcus-6|arcus-7|arcus-8|arcus-9|arcus-10)'",
    'layer_0': 512,
    'layer_1': 512,
    'layer_2': 512,
    'layer_3': 512,
    'layer_4': 512,
    'layer_5': 512,
    'layer_6': 512,
    'leaky_relu': 0.3,
    'loss_type': 'weak_loss',
    'lr': 0.001,
    'max_concurrent': 5,
    'max_dense_layers': 7,
    'net_type': 'conservation',
    'num_layers': 5,
    'patience': 10,
    'q': 'arcus.q',
    'sch': 'local'}
Epoch 1/25
 - 8182s - loss: 290.0774 - mean_squared_error: 293.0454 - val_loss: 253.4631 - val_mean_squared_error: 256.0565
Epoch 2/25
 - 8475s - loss: 204.7577 - mean_squared_error: 206.8528 - val_loss: 212.2653 - val_mean_squared_error: 214.4372
Epoch 3/25
 - 8706s - loss: 191.5525 - mean_squared_error: 193.5125 - val_loss: 196.7407 - val_mean_squared_error: 198.7538
Epoch 4/25
 - 7878s - loss: 184.9547 - mean_squared_error: 186.8471 - val_loss: 180.1891 - val_mean_squared_error: 182.0328
Epoch 5/25
 - 8990s - loss: 181.0165 - mean_squared_error: 182.8687 - val_loss: 192.4614 - val_mean_squared_error: 194.4307
Epoch 6/25
 - 8843s - loss: 178.2989 - mean_squared_error: 180.1233 - val_loss: 167.6561 - val_mean_squared_error: 169.3715
Epoch 7/25
 - 8004s - loss: 176.1466 - mean_squared_error: 177.9490 - val_loss: 193.0654 - val_mean_squared_error: 195.0409
Epoch 8/25
 - 7624s - loss: 174.5607 - mean_squared_error: 176.3468 - val_loss: 170.0221 - val_mean_squared_error: 171.7618
Epoch 9/25
 - 7717s - loss: 173.2904 - mean_squared_error: 175.0635 - val_loss: 166.9096 - val_mean_squared_error: 168.6174
Epoch 10/25
 - 8112s - loss: 172.3402 - mean_squared_error: 174.1035 - val_loss: 185.6407 - val_mean_squared_error: 187.5401
Epoch 11/25
 - 8007s - loss: 171.6681 - mean_squared_error: 173.4246 - val_loss: 167.8457 - val_mean_squared_error: 169.5631
Epoch 12/25
 - 9007s - loss: 171.0286 - mean_squared_error: 172.7786 - val_loss: 167.3793 - val_mean_squared_error: 169.0919
Epoch 13/25
 - 7661s - loss: 170.5733 - mean_squared_error: 172.3186 - val_loss: 175.6332 - val_mean_squared_error: 177.4303
Epoch 14/25
 - 7803s - loss: 170.1551 - mean_squared_error: 171.8961 - val_loss: 164.8089 - val_mean_squared_error: 166.4952
Epoch 15/25
 - 7445s - loss: 169.7456 - mean_squared_error: 171.4824 - val_loss: 170.9405 - val_mean_squared_error: 172.6896
Epoch 16/25
 - 7613s - loss: 169.4695 - mean_squared_error: 171.2035 - val_loss: 165.2468 - val_mean_squared_error: 166.9376
Epoch 17/25
 - 7238s - loss: 169.0591 - mean_squared_error: 170.7889 - val_loss: 170.8834 - val_mean_squared_error: 172.6319
Epoch 18/25
 - 7524s - loss: 168.5020 - mean_squared_error: 170.2261 - val_loss: 194.9796 - val_mean_squared_error: 196.9746
Epoch 19/25
 - 7254s - loss: 168.1233 - mean_squared_error: 169.8435 - val_loss: 161.8965 - val_mean_squared_error: 163.5531
Epoch 20/25
 - 7342s - loss: 167.7863 - mean_squared_error: 169.5031 - val_loss: 172.7722 - val_mean_squared_error: 174.5399
Epoch 21/25
 - 7715s - loss: 167.5643 - mean_squared_error: 169.2788 - val_loss: 167.1891 - val_mean_squared_error: 168.8998
Epoch 22/25
 - 7488s - loss: 167.2362 - mean_squared_error: 168.9473 - val_loss: 171.6794 - val_mean_squared_error: 173.4360
Epoch 23/25
 - 7581s - loss: 166.9883 - mean_squared_error: 168.6969 - val_loss: 169.6488 - val_mean_squared_error: 171.3846
Epoch 24/25
 - 7570s - loss: 166.8345 - mean_squared_error: 168.5415 - val_loss: 173.5852 - val_mean_squared_error: 175.3613
Epoch 25/25
 - 7628s - loss: 166.8412 - mean_squared_error: 168.5483 - val_loss: 172.4758 - val_mean_squared_error: 174.2406
/pkg/python/3.6.1-centos7/lib/python3.6/site-packages/h5py/__init__.py:34: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.
  from ._conv import register_converters as _register_converters
Using TensorFlow backend.
Done with trial 2
